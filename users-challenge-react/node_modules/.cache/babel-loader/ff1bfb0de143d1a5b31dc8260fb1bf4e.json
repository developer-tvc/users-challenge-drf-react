{"ast":null,"code":"var _jsxFileName = \"/home/anish/Documents/workspace/challenge/users-challenge-react/src/component/List.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport { useSelector, useDispatch, dispatch } from 'react-redux';\nimport { getList } from '../redux/action/updateListActionComponent';\nimport ReactDOM from 'react-dom';\nimport { AddFilled32, CheckmarkFilled24, PauseOutlineFilled24, TrashCan32 } from '@carbon/icons-react';\nimport { DataTable, Table, TableHead, TableRow, TableHeader, TableBody, TableCell, TableContainer, TableToolbar, TableToolbarContent, TableToolbarSearch, TableToolbarMenu, TableToolbarAction, TableSelectAll, TableSelectRow, TableBatchActions, TableBatchAction, Button, ComposedModal, ModalBody, ModalHeader } from 'carbon-components-react';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction addUser(first_name, username, is_active, is_staff, is_superuser, dispatch) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"first_name\": first_name,\n      \"username\": username,\n      \"is_superuser\": is_superuser,\n      \"is_staff\": is_staff,\n      \"is_active\": is_active\n    })\n  };\n  fetch('http://127.0.0.1:8000/users/register/', requestOptions).then(result => {\n    console.log(result);\n    dispatch(getList());\n  });\n}\n\nfunction deleteBatch(act, dispatch) {\n  console.log('in deleteBatch');\n  console.log(act);\n  var delete_list = [];\n  act.forEach(function (user) {\n    delete_list.push(parseInt(user.id));\n  });\n  const requestOptions = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"list\": delete_list\n    })\n  };\n  fetch('http://127.0.0.1:8000/users/delete-user/', requestOptions).then(result => {\n    dispatch(getList());\n  });\n}\n\nfunction deactivateBatch(act, dispatch) {\n  var deactivate_list = [];\n  act.forEach(function (user) {\n    deactivate_list.push(parseInt(user.id));\n  });\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"list\": deactivate_list\n    })\n  };\n  fetch('http://127.0.0.1:8000/users/user-deactivate/', requestOptions).then(result => {\n    dispatch(getList());\n  });\n}\n\nfunction activateBatch(act, dispatch) {\n  var activate_list = [];\n  act.forEach(function (user) {\n    activate_list.push(parseInt(user.id));\n  });\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"list\": activate_list\n    })\n  };\n  fetch('http://127.0.0.1:8000/users/user-activate/', requestOptions).then(result => {\n    dispatch(getList());\n  });\n}\n\nconst headers = [{\n  key: 'first_name',\n  header: 'Name'\n}, {\n  key: 'username',\n  header: 'Username'\n}, {\n  key: 'is_superuser',\n  header: 'Superuser'\n}, {\n  key: 'is_staff',\n  header: 'Staff'\n}, {\n  key: 'is_active',\n  header: 'Active'\n}];\n\nconst List = () => {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [uname, setUsername] = useState('');\n  const [isactive, setIsActive] = useState(false);\n  const [isstaff, setIsStaff] = useState(false);\n  const [issuperuser, setIsSuperUSer] = useState(false);\n  const data = useSelector(state => state.updateListReducer.List);\n  useEffect(() => {\n    dispatch(getList());\n  }, []);\n  useEffect(() => {\n    setRows(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [typeof document === 'undefined' ? null : /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(ComposedModal, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        hasForm: true,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block'\n          },\n          for: \"text-input-name\",\n          children: \" Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-modal-primary-focus\": true,\n          id: \"text-input-name\",\n          onChange: event => setName(event.target.value),\n          labelText: \"Name\",\n          placeholder: \" Eg: Thomas\",\n          style: {\n            marginBottom: '1rem',\n            display: 'block',\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block'\n          },\n          for: \"text-input-username\",\n          children: \" Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          \"data-modal-primary-focus\": true,\n          id: \"text-input-username\",\n          onChange: event => setUsername(event.target.value),\n          labelText: \"Username\",\n          placeholder: \" Eg: thomas\",\n          style: {\n            marginBottom: '1rem',\n            display: 'block',\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: 'block'\n          },\n          type: \"checkbox\",\n          onChange: event => setIsSuperUSer(event.target.value),\n          labelText: \"Superuser\",\n          id: \"checkbox-superuser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block'\n          },\n          for: \"checkbox-superuser\",\n          children: \" Superuser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: 'block'\n          },\n          type: \"checkbox\",\n          onChange: event => setIsActive(event.target.value),\n          labelText: \"Is Active\",\n          id: \"checkbox-isactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block'\n          },\n          for: \"checkbox-isactive\",\n          children: \" Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: 'block'\n          },\n          type: \"checkbox\",\n          onChange: event => setIsStaff(event.target.value),\n          labelText: \"Is Staff\",\n          id: \"checkbox-isstaff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block'\n          },\n          for: \"checkbox-isstaff\",\n          children: \" Staff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            addUser(name, uname, isactive, isstaff, issuperuser, dispatch);\n            setOpen(false);\n          },\n          size: \"small\",\n          kind: \"primary\",\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), document.body), (rows === null || rows === void 0 ? void 0 : rows.length) !== 0 ? /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      headers: headers,\n      children: ({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getSelectionProps,\n        getToolbarProps,\n        getBatchActionProps,\n        onInputChange,\n        selectedRows,\n        getTableProps,\n        getTableContainerProps\n      }) => /*#__PURE__*/_jsxDEV(TableContainer, { ...getTableContainerProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            float: 'right'\n          },\n          tabIndex: getBatchActionProps().shouldShowBatchActions ? -1 : 0,\n          onClick: () => setOpen(true),\n          renderIcon: AddFilled32,\n          size: \"small\",\n          kind: \"primary\",\n          children: \"Add new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableToolbar, { ...getToolbarProps(),\n          children: [/*#__PURE__*/_jsxDEV(TableBatchActions, {\n            persistent: \"true\",\n            ...getBatchActionProps(),\n            children: [/*#__PURE__*/_jsxDEV(TableBatchAction, {\n              persistent: \"true\",\n              tabIndex: getBatchActionProps().shouldShowBatchActions ? 0 : -1,\n              renderIcon: TrashCan32,\n              onClick: () => {\n                deleteBatch(selectedRows, dispatch);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBatchAction, {\n              tabIndex: getBatchActionProps().shouldShowBatchActions ? 0 : -1,\n              renderIcon: CheckmarkFilled24,\n              onClick: () => {\n                activateBatch(selectedRows, dispatch);\n              },\n              children: \"Activate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBatchAction, {\n              tabIndex: getBatchActionProps().shouldShowBatchActions ? 0 : -1,\n              renderIcon: PauseOutlineFilled24,\n              onClick: () => {\n                deactivateBatch(selectedRows, dispatch);\n              },\n              children: \"Deactivate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableToolbarContent, {\n            children: /*#__PURE__*/_jsxDEV(TableToolbarSearch, {\n              persistent: \"true\",\n              tabIndex: getBatchActionProps().shouldShowBatchActions ? -1 : 0,\n              onChange: onInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableSelectAll, { ...getSelectionProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), headers.map((header, i) => /*#__PURE__*/_jsxDEV(TableHeader, { ...getHeaderProps({\n                  header,\n                  isSortable: true\n                }),\n                children: header.header\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map((row, i) => /*#__PURE__*/_jsxDEV(TableRow, { ...getRowProps({\n                row\n              }),\n              children: [/*#__PURE__*/_jsxDEV(TableSelectRow, { ...getSelectionProps({\n                  row\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this), row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [true, false].includes(cell.value) ? cell.value ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  width: \"10\",\n                  height: \"10\",\n                  src: \"/check.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 77\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  width: \"10\",\n                  height: \"10\",\n                  src: \"/cancel.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 129\n                }, this) : cell.value\n              }, cell.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 23\n              }, this))]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(List, \"PIWOYMm1x41WGAgKMHpo6ZNg9to=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/anish/Documents/workspace/challenge/users-challenge-react/src/component/List.js"],"names":["useSelector","useDispatch","dispatch","getList","ReactDOM","AddFilled32","CheckmarkFilled24","PauseOutlineFilled24","TrashCan32","DataTable","Table","TableHead","TableRow","TableHeader","TableBody","TableCell","TableContainer","TableToolbar","TableToolbarContent","TableToolbarSearch","TableToolbarMenu","TableToolbarAction","TableSelectAll","TableSelectRow","TableBatchActions","TableBatchAction","Button","ComposedModal","ModalBody","ModalHeader","React","useState","useEffect","addUser","first_name","username","is_active","is_staff","is_superuser","requestOptions","method","headers","body","JSON","stringify","fetch","then","result","console","log","deleteBatch","act","delete_list","forEach","user","push","parseInt","id","deactivateBatch","deactivate_list","activateBatch","activate_list","key","header","List","rows","setRows","loading","setLoading","open","setOpen","name","setName","uname","setUsername","isactive","setIsActive","isstaff","setIsStaff","issuperuser","setIsSuperUSer","data","state","updateListReducer","document","createPortal","display","event","target","value","marginBottom","width","length","getHeaderProps","getRowProps","getSelectionProps","getToolbarProps","getBatchActionProps","onInputChange","selectedRows","getTableProps","getTableContainerProps","float","shouldShowBatchActions","map","i","isSortable","row","cells","cell","includes"],"mappings":"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","sourcesContent":["import '../App.css';\nimport { useSelector, useDispatch, dispatch } from 'react-redux';\nimport { getList } from '../redux/action/updateListActionComponent';\nimport ReactDOM from 'react-dom';\nimport { AddFilled32, CheckmarkFilled24, PauseOutlineFilled24, TrashCan32 } from '@carbon/icons-react';\nimport {\n  DataTable,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableToolbar,\n  TableToolbarContent,\n  TableToolbarSearch,\n  TableToolbarMenu,\n  TableToolbarAction,\n  TableSelectAll,\n  TableSelectRow,\n  TableBatchActions,\n  TableBatchAction,\n  Button,\n  ComposedModal,\n  ModalBody,\n  ModalHeader,\n} from 'carbon-components-react';\nimport React, { useState, useEffect } from 'react';\n\n\nfunction addUser(first_name, username, is_active, is_staff, is_superuser, dispatch) {\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(\n      {\n        \"first_name\": first_name,\n        \"username\": username,\n        \"is_superuser\": is_superuser,\n        \"is_staff\": is_staff,\n        \"is_active\": is_active\n      })\n  };\n  fetch('http://127.0.0.1:8000/users/register/', requestOptions).then((result) => {\n    console.log(result)\n    dispatch(getList())\n  })\n\n\n}\nfunction deleteBatch(act, dispatch) {\n  console.log('in deleteBatch')\n  console.log(act)\n  var delete_list = [];\n  act.forEach(function (user) {\n    delete_list.push(parseInt(user.id))\n  });\n  const requestOptions = {\n    method: 'DELETE',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(\n      {\n\n        \"list\": delete_list\n      })\n  };\n  fetch('http://127.0.0.1:8000/users/delete-user/', requestOptions).then((result) => {\n    dispatch(getList())\n  })\n\n}\nfunction deactivateBatch(act, dispatch) {\n  var deactivate_list = [];\n  act.forEach(function (user) {\n    deactivate_list.push(parseInt(user.id))\n  });\n  const requestOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(\n      {\n        \"list\": deactivate_list\n      })\n  };\n  fetch('http://127.0.0.1:8000/users/user-deactivate/', requestOptions).then((result) => {\n    dispatch(getList())\n  })\n\n}\nfunction activateBatch(act, dispatch) {\n  var activate_list = [];\n  act.forEach(function (user) {\n    activate_list.push(parseInt(user.id))\n  });\n  const requestOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(\n      {\n        \"list\": activate_list\n      })\n  };\n  fetch('http://127.0.0.1:8000/users/user-activate/', requestOptions).then((result) => {\n    dispatch(getList())\n  })\n}\n\nconst headers = [\n  {\n    key: 'first_name',\n    header: 'Name',\n  },\n  {\n    key: 'username',\n    header: 'Username',\n  },\n  {\n    key: 'is_superuser',\n    header: 'Superuser',\n  },\n  {\n    key: 'is_staff',\n    header: 'Staff',\n  },\n  {\n    key: 'is_active',\n    header: 'Active',\n  },\n];\n\n\nconst List = () => {\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [uname, setUsername] = useState('')\n  const [isactive, setIsActive] = useState(false);\n  const [isstaff, setIsStaff] = useState(false);\n  const [issuperuser, setIsSuperUSer] = useState(false);\n  const data = useSelector(state => state.updateListReducer.List)\n  useEffect(() => {\n\n    dispatch(getList())\n  }, [])\n  useEffect(() => {\n    setRows(data)\n  }, [data])\n  return (<>\n    {typeof document === 'undefined'\n      ? null\n      : ReactDOM.createPortal(\n        <ComposedModal open={open} onClose={() => setOpen(false)}>\n          <ModalHeader >\n            <h4>\n              Add New User\n            </h4>\n          </ModalHeader>\n          <ModalBody hasForm>\n            <label style={{ display: 'block' }} for=\"text-input-name\"> Name</label>\n            <input data-modal-primary-focus\n              id=\"text-input-name\"\n              onChange={event => setName(event.target.value)}\n              labelText=\"Name\"\n              placeholder=\" Eg: Thomas\"\n              style={{ marginBottom: '1rem', display: 'block', width: '100%' }} />\n\n\n            <label style={{ display: 'block' }} for=\"text-input-username\"> Username</label>\n            <input required data-modal-primary-focus\n              id=\"text-input-username\"\n              onChange={event => setUsername(event.target.value)}\n              labelText=\"Username\"\n              placeholder=\" Eg: thomas\"\n              style={{ marginBottom: '1rem', display: 'block', width: '100%' }} />\n\n\n            <input style={{ display: 'block' }} type=\"checkbox\" onChange={event => setIsSuperUSer(event.target.value)} labelText=\"Superuser\" id=\"checkbox-superuser\" />\n            <label style={{ display: 'block' }} for=\"checkbox-superuser\"> Superuser</label>\n            <input style={{ display: 'block' }} type=\"checkbox\" onChange={event => setIsActive(event.target.value)} labelText=\"Is Active\" id=\"checkbox-isactive\" />\n            <label style={{ display: 'block' }} for=\"checkbox-isactive\"> Active</label>\n            <input style={{ display: 'block' }} type=\"checkbox\" onChange={event => setIsStaff(event.target.value)} labelText=\"Is Staff\" id=\"checkbox-isstaff\" />\n            <label style={{ display: 'block' }} for=\"checkbox-isstaff\"> Staff</label>\n\n            <Button onClick={() => { addUser(name, uname, isactive, isstaff, issuperuser, dispatch); setOpen(false) }}\n              size=\"small\"\n              kind=\"primary\">\n              Add New User\n            </Button>\n\n          </ModalBody>\n        </ComposedModal>,\n        document.body\n      )}\n\n\n    {rows?.length !== 0 ?\n      <DataTable rows={rows} headers={headers}>\n        {({\n          rows,\n          headers,\n          getHeaderProps,\n          getRowProps,\n          getSelectionProps,\n          getToolbarProps,\n          getBatchActionProps,\n          onInputChange,\n          selectedRows,\n          getTableProps,\n          getTableContainerProps,\n        }) => (\n\n          <TableContainer\n            {...getTableContainerProps()}>\n            <h4>Users</h4>\n            <Button\n              style={{ float: 'right' }}\n              tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n              onClick={() => setOpen(true)}\n              renderIcon={AddFilled32}\n              size=\"small\"\n              kind=\"primary\">\n              Add new\n            </Button>\n            <TableToolbar {...getToolbarProps()}>\n              <TableBatchActions persistent=\"true\" {...getBatchActionProps()}>\n                <TableBatchAction\n                  persistent=\"true\"\n                  tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n                  renderIcon={TrashCan32}\n                  onClick={() => { deleteBatch(selectedRows, dispatch) }}>\n                  Delete\n                </TableBatchAction>\n                <TableBatchAction\n                  tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n                  renderIcon={CheckmarkFilled24}\n                  onClick={() => { activateBatch(selectedRows, dispatch) }}>\n                  Activate\n                </TableBatchAction>\n                <TableBatchAction\n                  tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n                  renderIcon={PauseOutlineFilled24}\n                  onClick={() => { deactivateBatch(selectedRows, dispatch) }}>\n                  Deactivate\n                </TableBatchAction>\n              </TableBatchActions>\n              <TableToolbarContent>\n                <TableToolbarSearch\n                  persistent=\"true\"\n                  tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n                  onChange={onInputChange} />\n\n\n              </TableToolbarContent>\n            </TableToolbar>\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  <TableSelectAll {...getSelectionProps()} />\n                  {headers.map((header, i) => (\n                    <TableHeader key={i} {...getHeaderProps({ header, isSortable: true })}>\n                      {header.header}\n                    </TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row, i) => (\n                  <TableRow key={i} {...getRowProps({ row })}>\n                    <TableSelectRow {...getSelectionProps({ row })} />\n                    {row.cells.map((cell) => (\n                      <TableCell key={cell.id}>{\n                        [true, false].includes(cell.value) ? (cell.value ? (<img width=\"10\" height=\"10\" src=\"/check.png\" />) : (<img width=\"10\" height=\"10\" src=\"/cancel.png\" />)) : cell.value\n                      }</TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </DataTable>\n      : null}</>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}