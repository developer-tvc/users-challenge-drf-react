{"ast":null,"code":"var _jsxFileName = \"/home/anish/Documents/workspace/challenge/users-challenge-react/src/component/List.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"../logo.svg\";\nimport '../App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getList } from '../redux/action/updateListActionComponent';\nimport { DataTable, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\nimport React, { useState, useEffect } from 'react'; // const rows = [\n//   {\n//     id: 'a',\n//     name: 'Jason Nolen',\n//     username:'json',\n//     status: 'Disabled',\n//     superuser: 'False',\n//     staff: 'True',\n//     active: 'False'\n//   },\n//   {\n//     id: 'b',\n//     name: 'John Smith',\n//     username: 'jsmith',\n//     status: 'Disabled',\n//     superuser: 'True',\n//     staff: 'True',\n//     active: 'True'\n//   },\n//   {\n//     id: 'c',\n//     name: 'Scott Adams',\n//     username: 'sadams',\n//     status: 'Disabled',\n//     superuser: 'True',\n//     staff: 'False',\n//     active: 'True'\n//   },\n//   {\n//     id: 'd',\n//     name: 'Megan Mcloud',\n//     username: 'mmcloud',\n//     status: 'Disabled',\n//     superuser: 'True',\n//     staff: 'True',\n//     active: 'False'\n//   },\n//   {\n//     id: 'e',\n//     name: 'Bill Evans',\n//     username: 'bevans',\n//     status: 'Disabled',\n//     superuser: 'True',\n//     staff: 'True',\n//     active: 'False'\n//   },\n//   {\n//     id: 'f',\n//     name: 'Todd Baker',\n//     username: 'tbaker',\n//     status: 'Disabled',\n//     superuser: 'True',\n//     staff: 'True',\n//     active: 'False'\n//   }\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headers = [{\n  key: 'first_name',\n  header: 'Name'\n}, {\n  key: 'username',\n  header: 'Username'\n}, {\n  key: 'is_superuser',\n  header: 'Superuser'\n}, {\n  key: 'is_staff',\n  header: 'Staff'\n}, {\n  key: 'is_active',\n  header: 'Active'\n}];\n\nfunction ticker_icon(value) {\n  if (value == 'True') {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"check.png\",\n      alt: \"True\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  } else {\n    return value;\n  }\n}\n\nconst List = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const dispatch = useDispatch(); //   const[error,setError] = \n\n  const rows = useSelector(state => state.updateListReducer.List);\n  useEffect(() => {\n    console.log(\"test11\");\n    dispatch(getList());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    rows: rows,\n    headers: headers,\n    children: ({\n      rows,\n      headers,\n      getTableProps,\n      getHeaderProps,\n      getRowProps\n    }) => /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: headers.map(header => /*#__PURE__*/_jsxDEV(TableHeader, { ...getHeaderProps({\n              header,\n              isSortable: true,\n              showToolbar: true\n            }),\n            children: header.header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, { ...getRowProps({\n            row\n          }),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: ['True', 'False'].includes(cell.value) ? cell.value == 'True' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              width: \"10\",\n              height: \"10\",\n              src: \"/check.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              width: \"10\",\n              height: \"10\",\n              src: \"/cancel.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 49\n            }, this) : cell.value\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 1\n  }, this);\n};\n\n_s(List, \"HnFisftiSQpioWkeJYIAkp5rXIQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/anish/Documents/workspace/challenge/users-challenge-react/src/component/List.js"],"names":["useSelector","useDispatch","getList","DataTable","Table","TableHead","TableRow","TableHeader","TableBody","TableCell","React","useState","useEffect","headers","key","header","ticker_icon","value","List","data","setData","loading","setLoading","dispatch","rows","state","updateListReducer","console","log","getTableProps","getHeaderProps","getRowProps","map","isSortable","showToolbar","row","cells","cell","includes","id"],"mappings":"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","sourcesContent":["import logo from '../logo.svg';\nimport '../App.css';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { getList } from '../redux/action/updateListActionComponent';\n\n\n\nimport {\n  DataTable,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n} from 'carbon-components-react';\nimport React, { useState,useEffect } from 'react';\n\n// const rows = [\n//   {\n//     id: 'a',\n//     name: 'Jason Nolen',\n//     username:'json',\n//     status: 'Disabled',\n//     superuser: 'False',\n//     staff: 'True',\n//     active: 'False'\n//   },\n//   {\n//     id: 'b',\n//     name: 'John Smith',\n//     username: 'jsmith',\n//     status: 'Disabled',\n//     superuser: 'True',\n//     staff: 'True',\n//     active: 'True'\n//   },\n//   {\n//     id: 'c',\n//     name: 'Scott Adams',\n//     username: 'sadams',\n//     status: 'Disabled',\n//     superuser: 'True',\n//     staff: 'False',\n//     active: 'True'\n//   },\n//   {\n//     id: 'd',\n//     name: 'Megan Mcloud',\n//     username: 'mmcloud',\n//     status: 'Disabled',\n//     superuser: 'True',\n//     staff: 'True',\n//     active: 'False'\n//   },\n//   {\n//     id: 'e',\n//     name: 'Bill Evans',\n//     username: 'bevans',\n//     status: 'Disabled',\n//     superuser: 'True',\n//     staff: 'True',\n//     active: 'False'\n//   },\n//   {\n//     id: 'f',\n//     name: 'Todd Baker',\n//     username: 'tbaker',\n//     status: 'Disabled',\n//     superuser: 'True',\n//     staff: 'True',\n//     active: 'False'\n//   }\n\n// ];\n\nconst headers = [\n  {\n    key: 'first_name',\n    header: 'Name',\n  },\n  {\n    key: 'username',\n    header: 'Username',\n  },\n  {\n    key: 'is_superuser',\n    header: 'Superuser',\n  },\n  {\n    key: 'is_staff',\n    header: 'Staff',\n  },\n  {\n    key: 'is_active',\n    header: 'Active',\n  },\n];\nfunction ticker_icon(value){\n  if (value=='True'){\n    return <img src=\"check.png\"  alt=\"True\" />\n  }\n  else{\n    return value\n  }\n}\n\nconst List = ()=>{\n  const [data,setData] = useState(null);\n  const[loading,setLoading] = useState(true);\n  const dispatch = useDispatch()\n//   const[error,setError] = \nconst rows = useSelector(state=>state.updateListReducer.List)\nuseEffect(()=>{\n    console.log(\"test11\")\ndispatch(getList())\n},[])\n  return (\n<DataTable rows={rows} headers={headers}>\n  {({ rows, headers, getTableProps, getHeaderProps, getRowProps }) => (\n    <Table {...getTableProps()}>\n      <TableHead>\n        <TableRow>\n          {headers.map((header) => (\n            <TableHeader {...getHeaderProps({ header,isSortable: true,showToolbar: true })}>\n              {header.header}\n            </TableHeader>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map((row) => (\n          <TableRow {...getRowProps({ row })}>\n            {row.cells.map((cell) => (\n              \n              <TableCell key={cell.id}>{\n\n                ['True','False'].includes(cell.value) ? (\n                                                          cell.value=='True' ? (\n                                            <img  width=\"10\" height=\"10\" src=\"/check.png\" />\n                                                                        ) : (\n                                                <img width=\"10\" height=\"10\" src=\"/cancel.png\" />\n                                                      )\n                                    ):cell.value\n\n\n\n\n              }</TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  )}\n</DataTable>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}