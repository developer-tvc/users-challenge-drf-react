{"ast":null,"code":"var _jsxFileName = \"/home/anish/Documents/workspace/challenge/users-challenge-react/src/component/List.js\";\nimport logo from \"../logo.svg\";\nimport '../App.css';\nimport { useSelector, useDispatch, dispatch } from 'react-redux';\nimport { getList } from '../redux/action/updateListActionComponent';\nimport { iconAdd } from 'carbon-icons';\nimport ReactDOM from 'react-dom';\nimport { DataTable, Table, TableHead, TableRow, TableHeader, TableBody, TableCell, TableContainer, TableToolbar, TableToolbarContent, TableToolbarSearch, TableToolbarMenu, TableToolbarAction, TableSelectAll, TableSelectRow, TableBatchActions, TableBatchAction, Button, ComposedModal, TextInput, Select, SelectItem, ModalBody, ModalHeader, Checkbox } from 'carbon-components-react';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction action(act) {\n  console.log(act);\n}\n\nfunction addUser(first_name, username, is_active, is_staff, is_superuser) {\n  var _s = $RefreshSig$();\n\n  console.log('in add USer');\n  console.log(act);\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"first_name\": first_name,\n      \"username\": username,\n      \"is_superuser\": is_superuser,\n      \"is_staff\": is_staff,\n      \"is_active\": is_active\n    })\n  };\n  fetch('http://127.0.0.1:8000/users/register/', requestOptions);\n\n  function deleteBatch(act) {\n    console.log('in deleteBatch');\n    console.log(act);\n  }\n\n  function deactivateBatch(act) {\n    console.log(' in deactivateBatch');\n    console.log(act);\n    var deactivate_list = [];\n    act.forEach(function (user) {\n      deactivate_list.push(parseInt(user.id));\n    });\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"list\": deactivate_list\n      })\n    };\n    fetch('http://127.0.0.1:8000/users/user-deactivate/', requestOptions);\n  }\n\n  function activateBatch(act) {\n    console.log('in activateBatch ');\n    console.log(act);\n    var activate_list = [];\n    act.forEach(function (user) {\n      activate_list.push(parseInt(user.id));\n    });\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"list\": activate_list\n      })\n    };\n    fetch('http://127.0.0.1:8000/users/user-activate/', requestOptions); // .then(response => response.json())\n    //       .then(data => this.setState());\n  }\n\n  const headers = [{\n    key: 'first_name',\n    header: 'Name'\n  }, {\n    key: 'username',\n    header: 'Username'\n  }, {\n    key: 'is_superuser',\n    header: 'Superuser'\n  }, {\n    key: 'is_staff',\n    header: 'Staff'\n  }, {\n    key: 'is_active',\n    header: 'Active'\n  }];\n\n  const List = () => {\n    _s();\n\n    const [rows, setRows] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [open, setOpen] = useState(false);\n    const dispatch = useDispatch(); //   const[error,setError] = \n\n    const data = useSelector(state => state.updateListReducer.List);\n    console.log(rows);\n    useEffect(() => {\n      dispatch(getList());\n    }, []);\n    useEffect(() => {\n      setRows(data);\n    }, [data]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [typeof document === 'undefined' ? null : /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(ComposedModal, {\n        open: open,\n        onClose: () => setOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Add new user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          hasForm: true,\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            \"data-modal-primary-focus\": true,\n            id: \"text-input-name\",\n            labelText: \"Name\",\n            placeholder: \" Eg: Thomas\",\n            style: {\n              marginBottom: '1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            required: true,\n            \"data-modal-primary-focus\": true,\n            id: \"text-input-username\",\n            labelText: \"Username\",\n            placeholder: \" Eg: thomas\",\n            style: {\n              marginBottom: '1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            labelText: \"Superuser\",\n            id: \"checkbox-superuser\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            labelText: \"Is Active\",\n            id: \"checkbox-isactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            labelText: \"Is Staff\",\n            id: \"checkbox-isactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            size: \"small\",\n            kind: \"primary\",\n            children: \"Add new\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), document.body), (rows === null || rows === void 0 ? void 0 : rows.length) !== 0 ? /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: rows,\n        headers: headers,\n        children: ({\n          rows,\n          headers,\n          getHeaderProps,\n          getRowProps,\n          getSelectionProps,\n          getToolbarProps,\n          getBatchActionProps,\n          onInputChange,\n          selectedRows,\n          getTableProps,\n          getTableContainerProps\n        }) => /*#__PURE__*/_jsxDEV(TableContainer, {\n          title: \"Users\",\n          ...getTableContainerProps(),\n          children: [/*#__PURE__*/_jsxDEV(TableToolbar, { ...getToolbarProps(),\n            children: [/*#__PURE__*/_jsxDEV(TableBatchActions, { ...getBatchActionProps(),\n              children: [/*#__PURE__*/_jsxDEV(TableBatchAction, {\n                tabIndex: getBatchActionProps().shouldShowBatchActions ? 0 : -1,\n                onClick: () => {\n                  deleteBatch(selectedRows);\n                  dispatch(getList());\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableBatchAction, {\n                tabIndex: getBatchActionProps().shouldShowBatchActions ? 0 : -1,\n                onClick: () => {\n                  activateBatch(selectedRows);\n                  dispatch(getList());\n                },\n                children: \"Activate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableBatchAction, {\n                tabIndex: getBatchActionProps().shouldShowBatchActions ? 0 : -1,\n                onClick: () => {\n                  deactivateBatch(selectedRows);\n                  dispatch(getList());\n                },\n                children: \"Deactivate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableToolbarContent, {\n              children: [/*#__PURE__*/_jsxDEV(TableToolbarSearch, {\n                persistent: \"true\",\n                tabIndex: getBatchActionProps().shouldShowBatchActions ? -1 : 0,\n                onChange: onInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TableToolbarMenu, {\n                tabIndex: getBatchActionProps().shouldShowBatchActions ? -1 : 0,\n                children: [/*#__PURE__*/_jsxDEV(TableToolbarAction, {\n                  onClick: () => alert('Alert 1'),\n                  children: \"Action 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(TableToolbarAction, {\n                  onClick: () => alert('Alert 2'),\n                  children: \"Action 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(TableToolbarAction, {\n                  onClick: () => alert('Alert 3'),\n                  children: \"Action 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                tabIndex: getBatchActionProps().shouldShowBatchActions ? -1 : 0,\n                onClick: () => setOpen(true),\n                size: \"small\",\n                kind: \"primary\",\n                children: \"Add new\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableSelectAll, { ...getSelectionProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 13\n                }, this), headers.map((header, i) => /*#__PURE__*/_jsxDEV(TableHeader, { ...getHeaderProps({\n                    header,\n                    isSortable: true\n                  }),\n                  children: header.header\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 15\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: rows.map((row, i) => /*#__PURE__*/_jsxDEV(TableRow, { ...getRowProps({\n                  row\n                }),\n                children: [/*#__PURE__*/_jsxDEV(TableSelectRow, { ...getSelectionProps({\n                    row\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 15\n                }, this), row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: // console.log(cell.value)\n                  [true, false].includes(cell.value) ? cell.value ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    width: \"10\",\n                    height: \"10\",\n                    src: \"/check.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 63\n                  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    width: \"10\",\n                    height: \"10\",\n                    src: \"/cancel.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 67\n                  }, this) : cell.value\n                }, cell.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 34\n                }, this))]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 13\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }, this) : null]\n    }, void 0, true);\n  };\n\n  _s(List, \"2/x/qt0pqorBKz9pZHg7G5N+UE8=\", false, function () {\n    return [useDispatch, useSelector];\n  });\n}\n\nexport default List;","map":{"version":3,"sources":["/home/anish/Documents/workspace/challenge/users-challenge-react/src/component/List.js"],"names":["useSelector","useDispatch","dispatch","getList","iconAdd","ReactDOM","DataTable","Table","TableHead","TableRow","TableHeader","TableBody","TableCell","TableContainer","TableToolbar","TableToolbarContent","TableToolbarSearch","TableToolbarMenu","TableToolbarAction","TableSelectAll","TableSelectRow","TableBatchActions","TableBatchAction","Button","ComposedModal","TextInput","Select","SelectItem","ModalBody","ModalHeader","Checkbox","React","useState","useEffect","action","act","console","log","addUser","first_name","username","is_active","is_staff","is_superuser","requestOptions","method","headers","body","JSON","stringify","fetch","deleteBatch","deactivateBatch","deactivate_list","forEach","user","push","parseInt","id","activateBatch","activate_list","key","header","List","rows","setRows","loading","setLoading","open","setOpen","data","state","updateListReducer","document","createPortal","marginBottom","length","getHeaderProps","getRowProps","getSelectionProps","getToolbarProps","getBatchActionProps","onInputChange","selectedRows","getTableProps","getTableContainerProps","shouldShowBatchActions","alert","map","i","isSortable","row","cells","cell","includes","value"],"mappings":"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","sourcesContent":["import logo from '../logo.svg';\nimport '../App.css';\nimport { useSelector,useDispatch,dispatch } from 'react-redux';\nimport { getList } from '../redux/action/updateListActionComponent';\nimport { iconAdd } from 'carbon-icons';\nimport ReactDOM from 'react-dom';\n\n\n\nimport {\n  DataTable,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableToolbar,\n  TableToolbarContent,\n  TableToolbarSearch,\n  TableToolbarMenu,\n  TableToolbarAction,\n  TableSelectAll,\n  TableSelectRow,\n  TableBatchActions,\n  TableBatchAction,\n  Button,\n  ComposedModal,\n  TextInput,\n  Select,\n  SelectItem,\n  ModalBody,\n  ModalHeader,\n  Checkbox\n} from 'carbon-components-react';\n\nimport React, { useState,useEffect } from 'react';\n\nfunction action(act){\n  console.log(act)\n}\nfunction addUser(first_name,username,is_active,is_staff,is_superuser){\n  console.log('in add USer')\n  console.log(act)\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(\n      {\n      \n        \"first_name\":first_name,\n        \"username\":username,\n        \"is_superuser\":is_superuser,\n        \"is_staff\":is_staff,\n        \"is_active\":is_active\n      })\n  };\n  fetch('http://127.0.0.1:8000/users/register/', requestOptions)\n\nfunction deleteBatch(act){\n  console.log('in deleteBatch')\n  console.log(act)\n}\nfunction deactivateBatch(act){\n  console.log(' in deactivateBatch')\n  console.log(act)\n  var deactivate_list = [];\n  act.forEach(function(user){\n    deactivate_list.push(parseInt(user.id))\n  });\n  const requestOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(\n      {\n      \n          \"list\":deactivate_list\n      })\n  };\n  fetch('http://127.0.0.1:8000/users/user-deactivate/', requestOptions)\n\n}\nfunction activateBatch(act){\n  console.log('in activateBatch ')\n  console.log(act)\n  var activate_list = [];\n  act.forEach(function(user){\n    activate_list.push(parseInt(user.id))\n  });\n  const requestOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(\n      {\n      \n          \"list\":activate_list\n      })\n  };\n  fetch('http://127.0.0.1:8000/users/user-activate/', requestOptions)\n  // .then(response => response.json())\n  //       .then(data => this.setState());\n\n\n\n}\n\n\n\nconst headers = [\n  {\n    key: 'first_name',\n    header: 'Name',\n  },\n  {\n    key: 'username',\n    header: 'Username',\n  },\n  {\n    key: 'is_superuser',\n    header: 'Superuser',\n  },\n  {\n    key: 'is_staff',\n    header: 'Staff',\n  },\n  {\n    key: 'is_active',\n    header: 'Active',\n  },\n];\n\n\nconst List = ()=>{\n  const [rows,setRows] = useState([]);\n  const[loading,setLoading] = useState(true);\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch()\n//   const[error,setError] = \nconst data = useSelector(state=>state.updateListReducer.List)\nconsole.log(rows)\nuseEffect(()=>{\n\ndispatch(getList())\n},[])\nuseEffect(()=>{\nsetRows(data)\n},[data])\n  return (<>\n  {typeof document === 'undefined'\n        ? null\n        : ReactDOM.createPortal(\n            <ComposedModal  open={open} onClose={() => setOpen(false)}>\n                <ModalHeader >\n                    <h4>\n                      Add new user\n                    </h4>\n                  </ModalHeader>\n              <ModalBody hasForm>\n                    <TextInput \n                        data-modal-primary-focus\n                        id=\"text-input-name\"\n                        labelText=\"Name\"\n                        placeholder=\" Eg: Thomas\"\n                        style={{ marginBottom: '1rem' }}\n                      />\n\n                      <TextInput required\n                        data-modal-primary-focus\n                        id=\"text-input-username\"\n                        labelText=\"Username\"\n                        placeholder=\" Eg: thomas\"\n                        style={{ marginBottom: '1rem' }}\n                      />\n           \n\n                      <Checkbox labelText=\"Superuser\" id=\"checkbox-superuser\" />\n                      <Checkbox labelText=\"Is Active\" id=\"checkbox-isactive\" />\n                      <Checkbox labelText=\"Is Staff\" id=\"checkbox-isactive\" />\n                      <Button\n                  \n                        onClick={() => setOpen(false)}\n                        size=\"small\"\n                        kind=\"primary\">\n                        Add new\n                      </Button>\n\n              </ModalBody>          \n\n\n            </ComposedModal>,\n            document.body\n          )}\n      \n  \n  {rows?.length!==0?\n    <DataTable rows={rows} headers={headers}>\n    {({\n      rows,\n      headers,\n      getHeaderProps,\n      getRowProps,\n      getSelectionProps,\n      getToolbarProps,\n      getBatchActionProps,\n      onInputChange,\n      selectedRows,\n      getTableProps,\n      getTableContainerProps,\n    }) => (\n      <TableContainer\n      title=\"Users\"\n\n      {...getTableContainerProps()}>\n      <TableToolbar {...getToolbarProps()}>\n        <TableBatchActions {...getBatchActionProps()}>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            \n            onClick={() => { deleteBatch(selectedRows);dispatch(getList())}}>\n            Delete\n          </TableBatchAction>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            \n            onClick={() => {activateBatch(selectedRows);dispatch(getList())}}>\n            Activate\n          </TableBatchAction>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            \n            onClick={() => {deactivateBatch(selectedRows);dispatch(getList())}}>\n            Deactivate\n          </TableBatchAction>\n        </TableBatchActions>\n        <TableToolbarContent>\n          <TableToolbarSearch\n            persistent=\"true\"\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n            onChange={onInputChange}\n          />\n          <TableToolbarMenu\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}>\n            <TableToolbarAction onClick={() => alert('Alert 1')}>\n              Action 1\n            </TableToolbarAction>\n            <TableToolbarAction onClick={() => alert('Alert 2')}>\n              Action 2\n            </TableToolbarAction>\n            <TableToolbarAction onClick={() => alert('Alert 3')}>\n              Action 3\n            </TableToolbarAction>\n          </TableToolbarMenu>\n          <Button\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n            onClick={() => setOpen(true)}\n            size=\"small\"\n            kind=\"primary\">\n            Add new\n          </Button>\n        </TableToolbarContent>\n      </TableToolbar>\n      <Table {...getTableProps()}>\n        <TableHead>\n          <TableRow>\n            <TableSelectAll {...getSelectionProps()} />\n            {headers.map((header, i) => (\n              <TableHeader key={i} {...getHeaderProps({ header,isSortable: true })}>\n                {header.header}\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, i) => (\n            <TableRow key={i} {...getRowProps({ row })}>\n              <TableSelectRow {...getSelectionProps({ row })} />\n              {row.cells.map((cell) => (\n                                 <TableCell key={cell.id}>{\n                                  // console.log(cell.value)\n                                  [true,false].includes(cell.value) ? (\n                                                                            cell.value ? (\n                                                              <img  width=\"10\" height=\"10\" src=\"/check.png\" />\n                                                                                          ) : (\n                                                                  <img width=\"10\" height=\"10\" src=\"/cancel.png\" />\n                                                                        )\n                                                      ):cell.value\n                  \n                  \n                  \n                  \n                                }</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    )}\n  </DataTable>\n    :null}</>\n  );\n}\n}\nexport default List;\n"]},"metadata":{},"sourceType":"module"}