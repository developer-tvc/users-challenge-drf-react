{"ast":null,"code":"var _jsxFileName = \"/home/anish/Documents/workspace/challenge/users-challenge-react/src/component/List.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"../logo.svg\";\nimport '../App.css';\nimport { useSelector, useDispatch, dispatch } from 'react-redux';\nimport { getList } from '../redux/action/updateListActionComponent';\nimport { iconAdd } from 'carbon-icons';\nimport ReactDOM from 'react-dom';\nimport { DataTable, Table, TableHead, TableRow, TableHeader, TableBody, TableCell, TableContainer, TableToolbar, TableToolbarContent, TableToolbarSearch, TableToolbarMenu, TableToolbarAction, TableSelectAll, TableSelectRow, TableBatchActions, TableBatchAction, Button, ComposedModal, TextInput, Select, SelectItem, ModalBody, ModalHeader, Checkbox } from 'carbon-components-react';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction action(act) {\n  console.log(act);\n}\n\nfunction addUser(first_name, username, is_active, is_staff, is_superuser) {\n  console.log('in add USer');\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"first_name\": first_name,\n      \"username\": username,\n      \"is_superuser\": is_superuser,\n      \"is_staff\": is_staff,\n      \"is_active\": is_active\n    })\n  };\n  fetch('http://127.0.0.1:8000/users/register/', requestOptions);\n}\n\nfunction deleteBatch(act) {\n  console.log('in deleteBatch');\n  console.log(act);\n}\n\nfunction deactivateBatch(act) {\n  console.log(' in deactivateBatch');\n  console.log(act);\n  var deactivate_list = [];\n  act.forEach(function (user) {\n    deactivate_list.push(parseInt(user.id));\n  });\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"list\": deactivate_list\n    })\n  };\n  fetch('http://127.0.0.1:8000/users/user-deactivate/', requestOptions);\n}\n\nfunction activateBatch(act) {\n  console.log('in activateBatch ');\n  console.log(act);\n  var activate_list = [];\n  act.forEach(function (user) {\n    activate_list.push(parseInt(user.id));\n  });\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"list\": activate_list\n    })\n  };\n  fetch('http://127.0.0.1:8000/users/user-activate/', requestOptions); // .then(response => response.json())\n  //       .then(data => this.setState());\n}\n\nconst headers = [{\n  key: 'first_name',\n  header: 'Name'\n}, {\n  key: 'username',\n  header: 'Username'\n}, {\n  key: 'is_superuser',\n  header: 'Superuser'\n}, {\n  key: 'is_staff',\n  header: 'Staff'\n}, {\n  key: 'is_active',\n  header: 'Active'\n}];\n\nconst List = () => {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [uname, setUsername] = useState('');\n  const [isactive, setIsActive] = useState(false);\n  const [isstaff, setIsStaff] = useState(false);\n  const [issuperuser, setIsSuperUSer] = useState(false); //   const[error,setError] = \n\n  const data = useSelector(state => state.updateListReducer.List);\n  console.log(rows);\n  useEffect(() => {\n    dispatch(getList());\n  }, []);\n  useEffect(() => {\n    setRows(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [typeof document === 'undefined' ? null : /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(ComposedModal, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add new user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        hasForm: true,\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          \"data-modal-primary-focus\": true,\n          id: \"text-input-name\",\n          onChange: event => setName(event.target.value),\n          labelText: \"Name\",\n          placeholder: \" Eg: Thomas\",\n          style: {\n            marginBottom: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          required: true,\n          \"data-modal-primary-focus\": true,\n          id: \"text-input-username\",\n          onChange: event => setUsername(event.target.value),\n          labelText: \"Username\",\n          placeholder: \" Eg: thomas\",\n          style: {\n            marginBottom: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: event => setIsSuperUSer(event.target.value),\n          labelText: \"Superuser\",\n          id: \"checkbox-superuser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: event => setIsActive(event.target.value),\n          labelText: \"Is Active\",\n          id: \"checkbox-isactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: event => setIsStaff(event.target.value),\n          labelText: \"Is Staff\",\n          id: \"checkbox-isstaff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            addUser(name, uname, isactive, isstaff, issuperuser);\n            dispatch(getList());\n          },\n          size: \"small\",\n          kind: \"primary\",\n          children: \"Add new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), document.body), (rows === null || rows === void 0 ? void 0 : rows.length) !== 0 ? /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      headers: headers,\n      children: ({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getSelectionProps,\n        getToolbarProps,\n        getBatchActionProps,\n        onInputChange,\n        selectedRows,\n        getTableProps,\n        getTableContainerProps\n      }) => /*#__PURE__*/_jsxDEV(TableContainer, {\n        title: \"Users\",\n        ...getTableContainerProps(),\n        children: [/*#__PURE__*/_jsxDEV(TableToolbar, { ...getToolbarProps(),\n          children: [/*#__PURE__*/_jsxDEV(TableBatchActions, { ...getBatchActionProps(),\n            children: [/*#__PURE__*/_jsxDEV(TableBatchAction, {\n              tabIndex: getBatchActionProps().shouldShowBatchActions ? 0 : -1,\n              onClick: () => {\n                deleteBatch(selectedRows);\n                dispatch(getList());\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableBatchAction, {\n              tabIndex: getBatchActionProps().shouldShowBatchActions ? 0 : -1,\n              onClick: () => {\n                activateBatch(selectedRows);\n                dispatch(getList());\n              },\n              children: \"Activate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableBatchAction, {\n              tabIndex: getBatchActionProps().shouldShowBatchActions ? 0 : -1,\n              onClick: () => {\n                deactivateBatch(selectedRows);\n                dispatch(getList());\n              },\n              children: \"Deactivate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableToolbarContent, {\n            children: [/*#__PURE__*/_jsxDEV(TableToolbarSearch, {\n              persistent: \"true\",\n              tabIndex: getBatchActionProps().shouldShowBatchActions ? -1 : 0,\n              onChange: onInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableToolbarMenu, {\n              tabIndex: getBatchActionProps().shouldShowBatchActions ? -1 : 0,\n              children: [/*#__PURE__*/_jsxDEV(TableToolbarAction, {\n                onClick: () => alert('Alert 1'),\n                children: \"Action 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableToolbarAction, {\n                onClick: () => alert('Alert 2'),\n                children: \"Action 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableToolbarAction, {\n                onClick: () => alert('Alert 3'),\n                children: \"Action 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              tabIndex: getBatchActionProps().shouldShowBatchActions ? -1 : 0,\n              onClick: () => setOpen(true),\n              size: \"small\",\n              kind: \"primary\",\n              children: \"Add new\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableSelectAll, { ...getSelectionProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 13\n              }, this), headers.map((header, i) => /*#__PURE__*/_jsxDEV(TableHeader, { ...getHeaderProps({\n                  header,\n                  isSortable: true\n                }),\n                children: header.header\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map((row, i) => /*#__PURE__*/_jsxDEV(TableRow, { ...getRowProps({\n                row\n              }),\n              children: [/*#__PURE__*/_jsxDEV(TableSelectRow, { ...getSelectionProps({\n                  row\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 15\n              }, this), row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: // console.log(cell.value)\n                [true, false].includes(cell.value) ? cell.value ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  width: \"10\",\n                  height: \"10\",\n                  src: \"/check.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 63\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  width: \"10\",\n                  height: \"10\",\n                  src: \"/cancel.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 67\n                }, this) : cell.value\n              }, cell.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 34\n              }, this))]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(List, \"VxgS9qcbJrXG++GfBl5i/b4ZAZU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/anish/Documents/workspace/challenge/users-challenge-react/src/component/List.js"],"names":["useSelector","useDispatch","dispatch","getList","iconAdd","ReactDOM","DataTable","Table","TableHead","TableRow","TableHeader","TableBody","TableCell","TableContainer","TableToolbar","TableToolbarContent","TableToolbarSearch","TableToolbarMenu","TableToolbarAction","TableSelectAll","TableSelectRow","TableBatchActions","TableBatchAction","Button","ComposedModal","TextInput","Select","SelectItem","ModalBody","ModalHeader","Checkbox","React","useState","useEffect","action","act","console","log","addUser","first_name","username","is_active","is_staff","is_superuser","requestOptions","method","headers","body","JSON","stringify","fetch","deleteBatch","deactivateBatch","deactivate_list","forEach","user","push","parseInt","id","activateBatch","activate_list","key","header","List","rows","setRows","loading","setLoading","open","setOpen","name","setName","uname","setUsername","isactive","setIsActive","isstaff","setIsStaff","issuperuser","setIsSuperUSer","data","state","updateListReducer","document","createPortal","event","target","value","marginBottom","length","getHeaderProps","getRowProps","getSelectionProps","getToolbarProps","getBatchActionProps","onInputChange","selectedRows","getTableProps","getTableContainerProps","shouldShowBatchActions","alert","map","i","isSortable","row","cells","cell","includes"],"mappings":"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","sourcesContent":["import logo from '../logo.svg';\nimport '../App.css';\nimport { useSelector,useDispatch,dispatch } from 'react-redux';\nimport { getList } from '../redux/action/updateListActionComponent';\nimport { iconAdd } from 'carbon-icons';\nimport ReactDOM from 'react-dom';\n\n\n\nimport {\n  DataTable,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableToolbar,\n  TableToolbarContent,\n  TableToolbarSearch,\n  TableToolbarMenu,\n  TableToolbarAction,\n  TableSelectAll,\n  TableSelectRow,\n  TableBatchActions,\n  TableBatchAction,\n  Button,\n  ComposedModal,\n  TextInput,\n  Select,\n  SelectItem,\n  ModalBody,\n  ModalHeader,\n  Checkbox,\n} from 'carbon-components-react';\n\nimport React, { useState,useEffect } from 'react';\n\nfunction action(act){\n  console.log(act)\n}\nfunction addUser(first_name,username,is_active,is_staff,is_superuser){\n  console.log('in add USer')\n\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(\n      {\n      \n        \"first_name\":first_name,\n        \"username\":username,\n        \"is_superuser\":is_superuser,\n        \"is_staff\":is_staff,\n        \"is_active\":is_active\n      })\n  };\n  fetch('http://127.0.0.1:8000/users/register/', requestOptions)\n\n}\nfunction deleteBatch(act){\n  console.log('in deleteBatch')\n  console.log(act)\n}\nfunction deactivateBatch(act){\n  console.log(' in deactivateBatch')\n  console.log(act)\n  var deactivate_list = [];\n  act.forEach(function(user){\n    deactivate_list.push(parseInt(user.id))\n  });\n  const requestOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(\n      {\n      \n          \"list\":deactivate_list\n      })\n  };\n  fetch('http://127.0.0.1:8000/users/user-deactivate/', requestOptions)\n\n}\nfunction activateBatch(act){\n  console.log('in activateBatch ')\n  console.log(act)\n  var activate_list = [];\n  act.forEach(function(user){\n    activate_list.push(parseInt(user.id))\n  });\n  const requestOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(\n      {\n      \n          \"list\":activate_list\n      })\n  };\n  fetch('http://127.0.0.1:8000/users/user-activate/', requestOptions)\n  // .then(response => response.json())\n  //       .then(data => this.setState());\n\n\n\n}\n\n\n\nconst headers = [\n  {\n    key: 'first_name',\n    header: 'Name',\n  },\n  {\n    key: 'username',\n    header: 'Username',\n  },\n  {\n    key: 'is_superuser',\n    header: 'Superuser',\n  },\n  {\n    key: 'is_staff',\n    header: 'Staff',\n  },\n  {\n    key: 'is_active',\n    header: 'Active',\n  },\n];\n\n\nconst List = ()=>{\n  const [rows,setRows] = useState([]);\n  const[loading,setLoading] = useState(true);\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch()\n\n  const [name, setName] = useState('')\n  const [uname, setUsername] = useState('')\n  const [isactive, setIsActive] = useState(false);\n  const [isstaff, setIsStaff] = useState(false);\n  const [issuperuser, setIsSuperUSer] = useState(false);\n//   const[error,setError] = \nconst data = useSelector(state=>state.updateListReducer.List)\nconsole.log(rows)\nuseEffect(()=>{\n\ndispatch(getList())\n},[])\nuseEffect(()=>{\nsetRows(data)\n},[data])\n  return (<>\n  {typeof document === 'undefined'\n        ? null\n        : ReactDOM.createPortal(\n            <ComposedModal open={open} onClose={() => setOpen(false)}>\n              <ModalHeader >\n                <h4>\n                  Add new user\n                </h4>\n              </ModalHeader>\n          <ModalBody hasForm>\n                <TextInput \n                    data-modal-primary-focus\n                    id=\"text-input-name\"\n                    onChange={event => setName(event.target.value)}\n                    labelText=\"Name\"\n                    placeholder=\" Eg: Thomas\"\n                    style={{ marginBottom: '1rem' }}\n                  />\n\n                  <TextInput required\n                    data-modal-primary-focus\n                    id=\"text-input-username\"\n                    onChange={event => setUsername(event.target.value)}\n                    labelText=\"Username\"\n                    placeholder=\" Eg: thomas\"\n                    style={{ marginBottom: '1rem' }}\n                  />\n       \n\n                  <Checkbox onChange={event => setIsSuperUSer(event.target.value)} labelText=\"Superuser\" id=\"checkbox-superuser\" />\n                  <Checkbox onChange={event => setIsActive(event.target.value)} labelText=\"Is Active\" id=\"checkbox-isactive\" />\n                  <Checkbox onChange={event => setIsStaff(event.target.value)} labelText=\"Is Staff\" id=\"checkbox-isstaff\" />\n                  <Button\n              \n                    onClick={() => {addUser(name,uname,isactive,isstaff,issuperuser);dispatch(getList())}}\n                    size=\"small\"\n                    kind=\"primary\">\n                    Add new\n                  </Button>\n\n          </ModalBody>  \n            </ComposedModal>,\n            document.body\n          )}\n      \n  \n  {rows?.length!==0?\n    <DataTable rows={rows} headers={headers}>\n    {({\n      rows,\n      headers,\n      getHeaderProps,\n      getRowProps,\n      getSelectionProps,\n      getToolbarProps,\n      getBatchActionProps,\n      onInputChange,\n      selectedRows,\n      getTableProps,\n      getTableContainerProps,\n    }) => (\n      <TableContainer\n      title=\"Users\"\n\n      {...getTableContainerProps()}>\n      <TableToolbar {...getToolbarProps()}>\n        <TableBatchActions {...getBatchActionProps()}>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            \n            onClick={() => { deleteBatch(selectedRows);dispatch(getList())}}>\n            Delete\n          </TableBatchAction>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            \n            onClick={() => {activateBatch(selectedRows);dispatch(getList())}}>\n            Activate\n          </TableBatchAction>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            \n            onClick={() => {deactivateBatch(selectedRows);dispatch(getList())}}>\n            Deactivate\n          </TableBatchAction>\n        </TableBatchActions>\n        <TableToolbarContent>\n          <TableToolbarSearch\n            persistent=\"true\"\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n            onChange={onInputChange}\n          />\n          <TableToolbarMenu\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}>\n            <TableToolbarAction onClick={() => alert('Alert 1')}>\n              Action 1\n            </TableToolbarAction>\n            <TableToolbarAction onClick={() => alert('Alert 2')}>\n              Action 2\n            </TableToolbarAction>\n            <TableToolbarAction onClick={() => alert('Alert 3')}>\n              Action 3\n            </TableToolbarAction>\n          </TableToolbarMenu>\n          <Button\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n            onClick={() => setOpen(true)}\n            size=\"small\"\n            kind=\"primary\">\n            Add new\n          </Button>\n        </TableToolbarContent>\n      </TableToolbar>\n      <Table {...getTableProps()}>\n        <TableHead>\n          <TableRow>\n            <TableSelectAll {...getSelectionProps()} />\n            {headers.map((header, i) => (\n              <TableHeader key={i} {...getHeaderProps({ header,isSortable: true })}>\n                {header.header}\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, i) => (\n            <TableRow key={i} {...getRowProps({ row })}>\n              <TableSelectRow {...getSelectionProps({ row })} />\n              {row.cells.map((cell) => (\n                                 <TableCell key={cell.id}>{\n                                  // console.log(cell.value)\n                                  [true,false].includes(cell.value) ? (\n                                                                            cell.value ? (\n                                                              <img  width=\"10\" height=\"10\" src=\"/check.png\" />\n                                                                                          ) : (\n                                                                  <img width=\"10\" height=\"10\" src=\"/cancel.png\" />\n                                                                        )\n                                                      ):cell.value\n                  \n                  \n                  \n                  \n                                }</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    )}\n  </DataTable>\n    :null}</>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}